library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity dataMem is
	port (
		addressIn : in std_logic_vector(7 downto 0); 
		writeDataIn : in std_logic_vector(7 downto 0);
		readDataOut : out std_logic_vector(7 downto 0);
		
		-- control signals
		memRead, memWrite,clk: in std_logic
		
		
	);
end entity;
architecture behave of dataMem is 
signal ram_addr: std_logic_vector(7 downto 0);
type mem_dat is array(0 to 255) of std_logic_vector(7 downto 0);
        signal ramMem : mem_dat;
        attribute ramMem_init_file : string;
        attribute ramMem_init_file of ramMem : signal is "dataMem.mif";
begin
ram_addr<=addressIn;
process(clk)
begin
  if(rising_edge(clk)) then
  if (memwrite='1') then
    ramMem(to_integer(unsigned(ram_addr)))<=writeDataIn;
  end if;
  end if;
  if(memRead='1') then
  readDataOut<=ramMem(to_integer(unsigned(ram_addr))) (memRead='1') ;
else
  readDataOut<="00000000";
end if;
end process;
end architecture behave;